name: Adaptive training CI

on:
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - master
      - develop
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Cache Maven dependencies
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven/

      - name: Build with Maven
        run: mvn clean install -DskipTests -Dproprietary-repo-url=${{ vars.PROPRIETARY_REPO_URL }}

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Cache Maven dependencies
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven/

      - name: Run tests
        run: mvn test -Dproprietary-repo-url=${{ vars.PROPRIETARY_REPO_URL }}

  create_tag:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up SSH
        run: |
          mkdir -m700 ~/.ssh/
          echo "${{ secrets.SSH_PRIVKEY_B64 }}" | base64 -d > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Configure Git
        run: |
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git config --global user.name "${{ github.actor }}"

      - name: Create and push tag
        run: |
          git tag -a v$(cat VERSION.txt) -m "Release v$(cat VERSION.txt)"
          git push origin v$(cat VERSION.txt)

  generate_docs:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Generate and Push Swagger Docs
        run: |
          mvn clean package $MAVEN_CLI_OPTS -DskipTests -Dswagger.skip=false -Dproprietary-repo-url=${{ vars.PROPRIETARY_REPO_URL }}
          ls -la
        #if: github.ref == 'refs/heads/master'

      - name: Upload Docs Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.repository }}-docs
          path: doc-files/kypo-adaptive-training-swagger-open-api.yaml

  docker_image_push:
    runs-on: ubuntu-latest
    needs: [build, create_tag]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.CI_CUSTOM_REGISTRY_USER }}
          password: ${{ secrets.CI_CUSTOM_REGISTRY_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.CI_CUSTOM_REGISTRY_IMAGE }}:$GITHUB_REF .
          docker push ${{ secrets.CI_CUSTOM_REGISTRY_IMAGE }}:$GITHUB_REF

  docker_image_push_development:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.CI_CUSTOM_REGISTRY_USER }}
          password: ${{ secrets.CI_CUSTOM_REGISTRY_PASSWORD }}

      - name: Build and push Docker image for development
        run: |
          docker build -t ${{ secrets.CI_CUSTOM_REGISTRY_IMAGE }}:${{ github.ref_name }} .
          docker push ${{ secrets.CI_CUSTOM_REGISTRY_IMAGE }}:${{ github.ref_name }}
